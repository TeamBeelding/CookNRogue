//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Settings/PlayerActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerActions : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerActions"",
    ""maps"": [
        {
            ""name"": ""Default"",
            ""id"": ""f0cff418-85af-4d0e-b16c-dc0d41f2fb47"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""97c6c1c9-859b-4d48-b695-d3f7dbaec194"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": ""StickDeadzone"",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Aim"",
                    ""type"": ""Value"",
                    ""id"": ""0927c105-0bce-4051-af1c-a8425fedc92c"",
                    ""expectedControlType"": """",
                    ""processors"": ""StickDeadzone"",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Shoot"",
                    ""type"": ""Button"",
                    ""id"": ""722de3b6-2b24-467e-a29d-708b1e2a404b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dash"",
                    ""type"": ""Button"",
                    ""id"": ""bad0678d-5049-4437-9481-6d35e8112f76"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""88238274-356a-4186-b180-f3f39ea19244"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cook"",
                    ""type"": ""Button"",
                    ""id"": ""2968a975-66e5-4109-b8e3-cd5cd6e71647"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""a12c7b46-b438-496d-a6ea-cc0fc8f0eab4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OpenCB"",
                    ""type"": ""Button"",
                    ""id"": ""91e85025-2322-405e-bd5f-2bd9dbbc6c81"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""EnterDebug"",
                    ""type"": ""Button"",
                    ""id"": ""4adb3a5d-ca14-4a19-8342-45d1457b5257"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""418d99dd-d61b-4e53-84d9-88c4270f0de0"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""d9a66def-38f4-4f6e-84a8-03699da1bdf9"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""39bb57ed-0db2-45b0-8dc2-6b02f55f188d"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""39f39a4b-d2a2-448c-83d9-4a20a90baec9"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""2039148b-a3d6-4fcd-b89d-f867de73be21"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""8895d256-93d8-4e00-aae5-4823023dc347"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""8340a0ba-b8e3-4d6e-8cb4-1428e0fe559c"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d905ed06-2a80-4f91-b090-428ea27b3bdf"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""897e9c88-50be-46aa-a681-5559876a2d68"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""Aim"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c33587a3-de13-441f-84bc-ca7e410ab010"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Aim"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e0d49950-ee36-40c8-b3bf-fbd41e6e9bee"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9e33f304-7631-4934-8c79-ff01d7137413"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b2f4dd92-9071-4509-a70e-5499c599b803"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": ""AxisDeadzone"",
                    ""groups"": ""GamePad"",
                    ""action"": ""Cook"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""19400ea6-aaf5-40db-baff-b3283281265c"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Cook"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""715b5077-20f8-4990-ae12-e62cdf900623"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a7951093-4c26-4a6a-9675-07bf8656d831"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d1fc183c-c076-44ab-a199-6925d6e088a7"",
                    ""path"": ""<Keyboard>/p"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c1268843-b016-409d-8fc0-9fc84f3d26ba"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7d735e76-7d6a-4aa3-b4c2-d770ce795908"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5d51f65a-fb01-4928-a453-c5ae0a392708"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""92323129-6e4d-4d3c-a92d-9a0cdca0a0d6"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""EnterDebug"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f838bb04-d939-42b5-b024-64126d80606a"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""OpenCB"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f7e63030-ea8b-4875-9cb4-6c1b82157626"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""OpenCB"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Cooking"",
            ""id"": ""9b62ea70-9f89-4e8d-a285-d6bd7be856e0"",
            ""actions"": [
                {
                    ""name"": ""Cook"",
                    ""type"": ""Button"",
                    ""id"": ""f21ec3b5-b419-486a-b36b-5759215dd98a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectIngredient"",
                    ""type"": ""Button"",
                    ""id"": ""3f0c7d75-1b65-49fe-939e-69e7b181b17a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""StartCrafting"",
                    ""type"": ""Button"",
                    ""id"": ""18a4c17f-7942-48c3-b1a9-be709d1cdcbc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""IngredientSelector"",
                    ""type"": ""Value"",
                    ""id"": ""984d14e4-b498-4cca-8e44-543bf9ea5b93"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""b30e00b9-6da9-4c2f-a20d-2419e0b9f6a0"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ChangeWheel"",
                    ""type"": ""Button"",
                    ""id"": ""ac3372bb-e759-48db-9061-f0953e7c50ed"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""6900fb1a-5b03-409f-9dcf-8f328845652b"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": ""AxisDeadzone"",
                    ""groups"": ""GamePad"",
                    ""action"": ""Cook"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ce8a2b36-245e-4aec-9fc5-06d12d3d90d7"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Cook"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""723b5e95-a559-404b-a382-cac422db7b04"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""SelectIngredient"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""12dcfd7d-7f3d-4097-80e6-1b46d9a71cfb"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""SelectIngredient"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a800c54f-9926-4929-92bd-a02f7ddabb66"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": ""Hold(duration=0.2)"",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""StartCrafting"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6ed6b55a-5062-4b06-9202-704dbab3d33a"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""StartCrafting"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4c025de8-9dea-4412-b06f-86d77e52514a"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""IngredientSelector"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dfd3be85-538d-4026-b51d-fc014dcc3879"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""ChangeWheel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""637827fa-2552-4d25-b408-a2ee6694d4c4"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""27bb771a-b716-4dcb-a5e8-2d8152e7662a"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""2ac9a522-b5ad-43f4-bfc2-616fa46c2195"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""b846922a-0cbf-4d5e-b7ad-d5c474c8041d"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""c02c2f57-24ae-4660-bea3-7d8ea85091c4"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""d1707306-b985-4d9a-973d-511fc4aaf85e"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""UI"",
            ""id"": ""99640325-fa2f-41a2-8f51-562d0191ca22"",
            ""actions"": [
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""64ce9059-d66f-4e68-bd72-92ed0264571f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""6673362a-77c8-4bdf-a59c-5b626a848674"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Return"",
                    ""type"": ""Button"",
                    ""id"": ""25b33717-e950-4143-a62e-6980868d5bff"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Move"",
                    ""type"": ""PassThrough"",
                    ""id"": ""86634e0f-864a-40b0-a564-82c3d2b5a9db"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""IngredientSelector"",
                    ""type"": ""Value"",
                    ""id"": ""04c56406-3e56-4cea-8c3a-0c84c9ab2153"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SelectIngredient"",
                    ""type"": ""Button"",
                    ""id"": ""e63828fa-edab-4620-a8c1-36ea2ff5a8fa"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ValidateIngredients"",
                    ""type"": ""Button"",
                    ""id"": ""cffa512f-b46f-4b3a-aabc-00296ff590c3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""040a629e-6877-4729-84fe-5395e7476b25"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""15671a5d-1dc2-4c92-9067-af3a8551df8e"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""Return"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""67b9ac27-2e8b-4834-a67f-c02ad5e008e4"",
                    ""path"": ""<Gamepad>/dpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""95a1d767-b8a2-4d17-b9fd-8125b078e7fc"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""51e90717-6949-4edc-b9b0-6b81d3dbd834"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""702e5124-b208-4e48-a5fd-563b620bc4a2"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""fb333c76-b22e-4c6b-8f0b-eb640b92fa8d"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""a3929063-ba85-49dc-b721-a789b5141eb7"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""4198e10d-2500-4f17-99db-28ed30924722"",
                    ""path"": ""<Keyboard>/p"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""be10b25c-c2d3-44bf-9e4e-b58c13b32725"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8646a162-c74f-401b-97ba-80b5540535bb"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""74151a63-f679-461e-bf63-64a649b1bdb4"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""ValidateIngredients"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""05c25b5d-a3ac-4c8a-bd76-e6aedf1a3a5b"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""ValidateIngredients"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4a6c721f-77d5-401f-9c4b-a4c9373757dd"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""SelectIngredient"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d8c7ff7d-0780-4d79-ae7e-fe49cf8acdd2"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""SelectIngredient"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""decf065e-9f04-4099-93f5-fa8283ce2d46"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""IngredientSelector"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""CookBook"",
            ""id"": ""e22c203a-8a0b-45e6-bcc5-75f8945f6ab5"",
            ""actions"": [
                {
                    ""name"": ""Close"",
                    ""type"": ""Button"",
                    ""id"": ""66ed9328-e908-4177-8baa-00ea088ae815"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""NextPage"",
                    ""type"": ""Button"",
                    ""id"": ""cfe2a924-0937-428e-9f36-605ea073d9f1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PrevPage"",
                    ""type"": ""Button"",
                    ""id"": ""c7a66d65-1781-47e5-97cc-8983f5f0080d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""b1812a89-4c81-47ab-afcd-39613df77bcc"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""Close"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4f334ded-ecf2-4d52-a3f5-eb4c3cdfdd0f"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Close"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""73246954-ba9d-45ac-b277-6cb6b228424a"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""NextPage"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""da23b7c7-e5ba-4a97-b1d1-46c302e2e181"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""NextPage"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f726daa0-8a99-411f-8c47-878a2fe170cd"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""PrevPage"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5274c21d-094f-4141-b9c4-d4e22696a91e"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PrevPage"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Debug"",
            ""id"": ""483bae16-c1e2-4a10-ac49-19a9050c9a9e"",
            ""actions"": [
                {
                    ""name"": ""EnterDebug"",
                    ""type"": ""Button"",
                    ""id"": ""da525827-64c4-4f3b-8f83-3a6c20e742cb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""KillAllEnemies"",
                    ""type"": ""Button"",
                    ""id"": ""1765443e-ec90-439d-be29-13910dceb756"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ReloadLevel"",
                    ""type"": ""Button"",
                    ""id"": ""25739d98-662d-479a-a24e-699520ac22b5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""GoToNextLevel"",
                    ""type"": ""Button"",
                    ""id"": ""7b3cbdd1-4088-4899-b6ba-424593aed7a1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""GoToPreviousLevel"",
                    ""type"": ""Button"",
                    ""id"": ""7cd4477a-f228-4660-8fad-d189f5b3a015"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SkipTuto"",
                    ""type"": ""Button"",
                    ""id"": ""a5fb2b67-89d3-4cec-a96a-684e4430cc35"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""9d5445d9-9492-46ba-9e42-09527da19a6c"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""EnterDebug"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""be9dd907-e03f-46d9-9423-0b3e8957064f"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""KillAllEnemies"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1349a239-4bf9-4da3-aa59-dc8be77fca7e"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""GoToNextLevel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7d27d9af-43b9-4763-bac6-48faf7c775bd"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""GoToPreviousLevel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""84020daa-31ba-4386-b361-88acf0b62f60"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""SkipTuto"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""aed4e5b5-4cf2-4e6c-8d14-286d29c06c7f"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""ReloadLevel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Transitions"",
            ""id"": ""31640ccf-b75c-4980-a293-01a26bc7b380"",
            ""actions"": [
                {
                    ""name"": ""Debug"",
                    ""type"": ""Button"",
                    ""id"": ""2e4deed5-b987-482e-9756-55673dddfe14"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cook"",
                    ""type"": ""Button"",
                    ""id"": ""6b31da13-6c30-46eb-8275-d6af8170a679"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""90d3feba-a2a5-4df0-90b5-223591c3160d"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""Debug"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d9e63b17-f207-47e1-becf-b3dda06f63eb"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""Cook"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""GamePad"",
            ""bindingGroup"": ""GamePad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Keyboard"",
            ""bindingGroup"": ""Keyboard"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Default
        m_Default = asset.FindActionMap("Default", throwIfNotFound: true);
        m_Default_Move = m_Default.FindAction("Move", throwIfNotFound: true);
        m_Default_Aim = m_Default.FindAction("Aim", throwIfNotFound: true);
        m_Default_Shoot = m_Default.FindAction("Shoot", throwIfNotFound: true);
        m_Default_Dash = m_Default.FindAction("Dash", throwIfNotFound: true);
        m_Default_Interact = m_Default.FindAction("Interact", throwIfNotFound: true);
        m_Default_Cook = m_Default.FindAction("Cook", throwIfNotFound: true);
        m_Default_Pause = m_Default.FindAction("Pause", throwIfNotFound: true);
        m_Default_OpenCB = m_Default.FindAction("OpenCB", throwIfNotFound: true);
        m_Default_EnterDebug = m_Default.FindAction("EnterDebug", throwIfNotFound: true);
        // Cooking
        m_Cooking = asset.FindActionMap("Cooking", throwIfNotFound: true);
        m_Cooking_Cook = m_Cooking.FindAction("Cook", throwIfNotFound: true);
        m_Cooking_SelectIngredient = m_Cooking.FindAction("SelectIngredient", throwIfNotFound: true);
        m_Cooking_StartCrafting = m_Cooking.FindAction("StartCrafting", throwIfNotFound: true);
        m_Cooking_IngredientSelector = m_Cooking.FindAction("IngredientSelector", throwIfNotFound: true);
        m_Cooking_Move = m_Cooking.FindAction("Move", throwIfNotFound: true);
        m_Cooking_ChangeWheel = m_Cooking.FindAction("ChangeWheel", throwIfNotFound: true);
        // UI
        m_UI = asset.FindActionMap("UI", throwIfNotFound: true);
        m_UI_Pause = m_UI.FindAction("Pause", throwIfNotFound: true);
        m_UI_Interact = m_UI.FindAction("Interact", throwIfNotFound: true);
        m_UI_Return = m_UI.FindAction("Return", throwIfNotFound: true);
        m_UI_Move = m_UI.FindAction("Move", throwIfNotFound: true);
        m_UI_IngredientSelector = m_UI.FindAction("IngredientSelector", throwIfNotFound: true);
        m_UI_SelectIngredient = m_UI.FindAction("SelectIngredient", throwIfNotFound: true);
        m_UI_ValidateIngredients = m_UI.FindAction("ValidateIngredients", throwIfNotFound: true);
        // CookBook
        m_CookBook = asset.FindActionMap("CookBook", throwIfNotFound: true);
        m_CookBook_Close = m_CookBook.FindAction("Close", throwIfNotFound: true);
        m_CookBook_NextPage = m_CookBook.FindAction("NextPage", throwIfNotFound: true);
        m_CookBook_PrevPage = m_CookBook.FindAction("PrevPage", throwIfNotFound: true);
        // Debug
        m_Debug = asset.FindActionMap("Debug", throwIfNotFound: true);
        m_Debug_EnterDebug = m_Debug.FindAction("EnterDebug", throwIfNotFound: true);
        m_Debug_KillAllEnemies = m_Debug.FindAction("KillAllEnemies", throwIfNotFound: true);
        m_Debug_ReloadLevel = m_Debug.FindAction("ReloadLevel", throwIfNotFound: true);
        m_Debug_GoToNextLevel = m_Debug.FindAction("GoToNextLevel", throwIfNotFound: true);
        m_Debug_GoToPreviousLevel = m_Debug.FindAction("GoToPreviousLevel", throwIfNotFound: true);
        m_Debug_SkipTuto = m_Debug.FindAction("SkipTuto", throwIfNotFound: true);
        // Transitions
        m_Transitions = asset.FindActionMap("Transitions", throwIfNotFound: true);
        m_Transitions_Debug = m_Transitions.FindAction("Debug", throwIfNotFound: true);
        m_Transitions_Cook = m_Transitions.FindAction("Cook", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Default
    private readonly InputActionMap m_Default;
    private IDefaultActions m_DefaultActionsCallbackInterface;
    private readonly InputAction m_Default_Move;
    private readonly InputAction m_Default_Aim;
    private readonly InputAction m_Default_Shoot;
    private readonly InputAction m_Default_Dash;
    private readonly InputAction m_Default_Interact;
    private readonly InputAction m_Default_Cook;
    private readonly InputAction m_Default_Pause;
    private readonly InputAction m_Default_OpenCB;
    private readonly InputAction m_Default_EnterDebug;
    public struct DefaultActions
    {
        private @PlayerActions m_Wrapper;
        public DefaultActions(@PlayerActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Default_Move;
        public InputAction @Aim => m_Wrapper.m_Default_Aim;
        public InputAction @Shoot => m_Wrapper.m_Default_Shoot;
        public InputAction @Dash => m_Wrapper.m_Default_Dash;
        public InputAction @Interact => m_Wrapper.m_Default_Interact;
        public InputAction @Cook => m_Wrapper.m_Default_Cook;
        public InputAction @Pause => m_Wrapper.m_Default_Pause;
        public InputAction @OpenCB => m_Wrapper.m_Default_OpenCB;
        public InputAction @EnterDebug => m_Wrapper.m_Default_EnterDebug;
        public InputActionMap Get() { return m_Wrapper.m_Default; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(DefaultActions set) { return set.Get(); }
        public void SetCallbacks(IDefaultActions instance)
        {
            if (m_Wrapper.m_DefaultActionsCallbackInterface != null)
            {
                @Move.started -= m_Wrapper.m_DefaultActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_DefaultActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_DefaultActionsCallbackInterface.OnMove;
                @Aim.started -= m_Wrapper.m_DefaultActionsCallbackInterface.OnAim;
                @Aim.performed -= m_Wrapper.m_DefaultActionsCallbackInterface.OnAim;
                @Aim.canceled -= m_Wrapper.m_DefaultActionsCallbackInterface.OnAim;
                @Shoot.started -= m_Wrapper.m_DefaultActionsCallbackInterface.OnShoot;
                @Shoot.performed -= m_Wrapper.m_DefaultActionsCallbackInterface.OnShoot;
                @Shoot.canceled -= m_Wrapper.m_DefaultActionsCallbackInterface.OnShoot;
                @Dash.started -= m_Wrapper.m_DefaultActionsCallbackInterface.OnDash;
                @Dash.performed -= m_Wrapper.m_DefaultActionsCallbackInterface.OnDash;
                @Dash.canceled -= m_Wrapper.m_DefaultActionsCallbackInterface.OnDash;
                @Interact.started -= m_Wrapper.m_DefaultActionsCallbackInterface.OnInteract;
                @Interact.performed -= m_Wrapper.m_DefaultActionsCallbackInterface.OnInteract;
                @Interact.canceled -= m_Wrapper.m_DefaultActionsCallbackInterface.OnInteract;
                @Cook.started -= m_Wrapper.m_DefaultActionsCallbackInterface.OnCook;
                @Cook.performed -= m_Wrapper.m_DefaultActionsCallbackInterface.OnCook;
                @Cook.canceled -= m_Wrapper.m_DefaultActionsCallbackInterface.OnCook;
                @Pause.started -= m_Wrapper.m_DefaultActionsCallbackInterface.OnPause;
                @Pause.performed -= m_Wrapper.m_DefaultActionsCallbackInterface.OnPause;
                @Pause.canceled -= m_Wrapper.m_DefaultActionsCallbackInterface.OnPause;
                @OpenCB.started -= m_Wrapper.m_DefaultActionsCallbackInterface.OnOpenCB;
                @OpenCB.performed -= m_Wrapper.m_DefaultActionsCallbackInterface.OnOpenCB;
                @OpenCB.canceled -= m_Wrapper.m_DefaultActionsCallbackInterface.OnOpenCB;
                @EnterDebug.started -= m_Wrapper.m_DefaultActionsCallbackInterface.OnEnterDebug;
                @EnterDebug.performed -= m_Wrapper.m_DefaultActionsCallbackInterface.OnEnterDebug;
                @EnterDebug.canceled -= m_Wrapper.m_DefaultActionsCallbackInterface.OnEnterDebug;
            }
            m_Wrapper.m_DefaultActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @Aim.started += instance.OnAim;
                @Aim.performed += instance.OnAim;
                @Aim.canceled += instance.OnAim;
                @Shoot.started += instance.OnShoot;
                @Shoot.performed += instance.OnShoot;
                @Shoot.canceled += instance.OnShoot;
                @Dash.started += instance.OnDash;
                @Dash.performed += instance.OnDash;
                @Dash.canceled += instance.OnDash;
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
                @Cook.started += instance.OnCook;
                @Cook.performed += instance.OnCook;
                @Cook.canceled += instance.OnCook;
                @Pause.started += instance.OnPause;
                @Pause.performed += instance.OnPause;
                @Pause.canceled += instance.OnPause;
                @OpenCB.started += instance.OnOpenCB;
                @OpenCB.performed += instance.OnOpenCB;
                @OpenCB.canceled += instance.OnOpenCB;
                @EnterDebug.started += instance.OnEnterDebug;
                @EnterDebug.performed += instance.OnEnterDebug;
                @EnterDebug.canceled += instance.OnEnterDebug;
            }
        }
    }
    public DefaultActions @Default => new DefaultActions(this);

    // Cooking
    private readonly InputActionMap m_Cooking;
    private ICookingActions m_CookingActionsCallbackInterface;
    private readonly InputAction m_Cooking_Cook;
    private readonly InputAction m_Cooking_SelectIngredient;
    private readonly InputAction m_Cooking_StartCrafting;
    private readonly InputAction m_Cooking_IngredientSelector;
    private readonly InputAction m_Cooking_Move;
    private readonly InputAction m_Cooking_ChangeWheel;
    public struct CookingActions
    {
        private @PlayerActions m_Wrapper;
        public CookingActions(@PlayerActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Cook => m_Wrapper.m_Cooking_Cook;
        public InputAction @SelectIngredient => m_Wrapper.m_Cooking_SelectIngredient;
        public InputAction @StartCrafting => m_Wrapper.m_Cooking_StartCrafting;
        public InputAction @IngredientSelector => m_Wrapper.m_Cooking_IngredientSelector;
        public InputAction @Move => m_Wrapper.m_Cooking_Move;
        public InputAction @ChangeWheel => m_Wrapper.m_Cooking_ChangeWheel;
        public InputActionMap Get() { return m_Wrapper.m_Cooking; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CookingActions set) { return set.Get(); }
        public void SetCallbacks(ICookingActions instance)
        {
            if (m_Wrapper.m_CookingActionsCallbackInterface != null)
            {
                @Cook.started -= m_Wrapper.m_CookingActionsCallbackInterface.OnCook;
                @Cook.performed -= m_Wrapper.m_CookingActionsCallbackInterface.OnCook;
                @Cook.canceled -= m_Wrapper.m_CookingActionsCallbackInterface.OnCook;
                @SelectIngredient.started -= m_Wrapper.m_CookingActionsCallbackInterface.OnSelectIngredient;
                @SelectIngredient.performed -= m_Wrapper.m_CookingActionsCallbackInterface.OnSelectIngredient;
                @SelectIngredient.canceled -= m_Wrapper.m_CookingActionsCallbackInterface.OnSelectIngredient;
                @StartCrafting.started -= m_Wrapper.m_CookingActionsCallbackInterface.OnStartCrafting;
                @StartCrafting.performed -= m_Wrapper.m_CookingActionsCallbackInterface.OnStartCrafting;
                @StartCrafting.canceled -= m_Wrapper.m_CookingActionsCallbackInterface.OnStartCrafting;
                @IngredientSelector.started -= m_Wrapper.m_CookingActionsCallbackInterface.OnIngredientSelector;
                @IngredientSelector.performed -= m_Wrapper.m_CookingActionsCallbackInterface.OnIngredientSelector;
                @IngredientSelector.canceled -= m_Wrapper.m_CookingActionsCallbackInterface.OnIngredientSelector;
                @Move.started -= m_Wrapper.m_CookingActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_CookingActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_CookingActionsCallbackInterface.OnMove;
                @ChangeWheel.started -= m_Wrapper.m_CookingActionsCallbackInterface.OnChangeWheel;
                @ChangeWheel.performed -= m_Wrapper.m_CookingActionsCallbackInterface.OnChangeWheel;
                @ChangeWheel.canceled -= m_Wrapper.m_CookingActionsCallbackInterface.OnChangeWheel;
            }
            m_Wrapper.m_CookingActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Cook.started += instance.OnCook;
                @Cook.performed += instance.OnCook;
                @Cook.canceled += instance.OnCook;
                @SelectIngredient.started += instance.OnSelectIngredient;
                @SelectIngredient.performed += instance.OnSelectIngredient;
                @SelectIngredient.canceled += instance.OnSelectIngredient;
                @StartCrafting.started += instance.OnStartCrafting;
                @StartCrafting.performed += instance.OnStartCrafting;
                @StartCrafting.canceled += instance.OnStartCrafting;
                @IngredientSelector.started += instance.OnIngredientSelector;
                @IngredientSelector.performed += instance.OnIngredientSelector;
                @IngredientSelector.canceled += instance.OnIngredientSelector;
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @ChangeWheel.started += instance.OnChangeWheel;
                @ChangeWheel.performed += instance.OnChangeWheel;
                @ChangeWheel.canceled += instance.OnChangeWheel;
            }
        }
    }
    public CookingActions @Cooking => new CookingActions(this);

    // UI
    private readonly InputActionMap m_UI;
    private IUIActions m_UIActionsCallbackInterface;
    private readonly InputAction m_UI_Pause;
    private readonly InputAction m_UI_Interact;
    private readonly InputAction m_UI_Return;
    private readonly InputAction m_UI_Move;
    private readonly InputAction m_UI_IngredientSelector;
    private readonly InputAction m_UI_SelectIngredient;
    private readonly InputAction m_UI_ValidateIngredients;
    public struct UIActions
    {
        private @PlayerActions m_Wrapper;
        public UIActions(@PlayerActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Pause => m_Wrapper.m_UI_Pause;
        public InputAction @Interact => m_Wrapper.m_UI_Interact;
        public InputAction @Return => m_Wrapper.m_UI_Return;
        public InputAction @Move => m_Wrapper.m_UI_Move;
        public InputAction @IngredientSelector => m_Wrapper.m_UI_IngredientSelector;
        public InputAction @SelectIngredient => m_Wrapper.m_UI_SelectIngredient;
        public InputAction @ValidateIngredients => m_Wrapper.m_UI_ValidateIngredients;
        public InputActionMap Get() { return m_Wrapper.m_UI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIActions set) { return set.Get(); }
        public void SetCallbacks(IUIActions instance)
        {
            if (m_Wrapper.m_UIActionsCallbackInterface != null)
            {
                @Pause.started -= m_Wrapper.m_UIActionsCallbackInterface.OnPause;
                @Pause.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnPause;
                @Pause.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnPause;
                @Interact.started -= m_Wrapper.m_UIActionsCallbackInterface.OnInteract;
                @Interact.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnInteract;
                @Interact.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnInteract;
                @Return.started -= m_Wrapper.m_UIActionsCallbackInterface.OnReturn;
                @Return.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnReturn;
                @Return.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnReturn;
                @Move.started -= m_Wrapper.m_UIActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnMove;
                @IngredientSelector.started -= m_Wrapper.m_UIActionsCallbackInterface.OnIngredientSelector;
                @IngredientSelector.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnIngredientSelector;
                @IngredientSelector.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnIngredientSelector;
                @SelectIngredient.started -= m_Wrapper.m_UIActionsCallbackInterface.OnSelectIngredient;
                @SelectIngredient.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnSelectIngredient;
                @SelectIngredient.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnSelectIngredient;
                @ValidateIngredients.started -= m_Wrapper.m_UIActionsCallbackInterface.OnValidateIngredients;
                @ValidateIngredients.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnValidateIngredients;
                @ValidateIngredients.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnValidateIngredients;
            }
            m_Wrapper.m_UIActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Pause.started += instance.OnPause;
                @Pause.performed += instance.OnPause;
                @Pause.canceled += instance.OnPause;
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
                @Return.started += instance.OnReturn;
                @Return.performed += instance.OnReturn;
                @Return.canceled += instance.OnReturn;
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @IngredientSelector.started += instance.OnIngredientSelector;
                @IngredientSelector.performed += instance.OnIngredientSelector;
                @IngredientSelector.canceled += instance.OnIngredientSelector;
                @SelectIngredient.started += instance.OnSelectIngredient;
                @SelectIngredient.performed += instance.OnSelectIngredient;
                @SelectIngredient.canceled += instance.OnSelectIngredient;
                @ValidateIngredients.started += instance.OnValidateIngredients;
                @ValidateIngredients.performed += instance.OnValidateIngredients;
                @ValidateIngredients.canceled += instance.OnValidateIngredients;
            }
        }
    }
    public UIActions @UI => new UIActions(this);

    // CookBook
    private readonly InputActionMap m_CookBook;
    private ICookBookActions m_CookBookActionsCallbackInterface;
    private readonly InputAction m_CookBook_Close;
    private readonly InputAction m_CookBook_NextPage;
    private readonly InputAction m_CookBook_PrevPage;
    public struct CookBookActions
    {
        private @PlayerActions m_Wrapper;
        public CookBookActions(@PlayerActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Close => m_Wrapper.m_CookBook_Close;
        public InputAction @NextPage => m_Wrapper.m_CookBook_NextPage;
        public InputAction @PrevPage => m_Wrapper.m_CookBook_PrevPage;
        public InputActionMap Get() { return m_Wrapper.m_CookBook; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CookBookActions set) { return set.Get(); }
        public void SetCallbacks(ICookBookActions instance)
        {
            if (m_Wrapper.m_CookBookActionsCallbackInterface != null)
            {
                @Close.started -= m_Wrapper.m_CookBookActionsCallbackInterface.OnClose;
                @Close.performed -= m_Wrapper.m_CookBookActionsCallbackInterface.OnClose;
                @Close.canceled -= m_Wrapper.m_CookBookActionsCallbackInterface.OnClose;
                @NextPage.started -= m_Wrapper.m_CookBookActionsCallbackInterface.OnNextPage;
                @NextPage.performed -= m_Wrapper.m_CookBookActionsCallbackInterface.OnNextPage;
                @NextPage.canceled -= m_Wrapper.m_CookBookActionsCallbackInterface.OnNextPage;
                @PrevPage.started -= m_Wrapper.m_CookBookActionsCallbackInterface.OnPrevPage;
                @PrevPage.performed -= m_Wrapper.m_CookBookActionsCallbackInterface.OnPrevPage;
                @PrevPage.canceled -= m_Wrapper.m_CookBookActionsCallbackInterface.OnPrevPage;
            }
            m_Wrapper.m_CookBookActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Close.started += instance.OnClose;
                @Close.performed += instance.OnClose;
                @Close.canceled += instance.OnClose;
                @NextPage.started += instance.OnNextPage;
                @NextPage.performed += instance.OnNextPage;
                @NextPage.canceled += instance.OnNextPage;
                @PrevPage.started += instance.OnPrevPage;
                @PrevPage.performed += instance.OnPrevPage;
                @PrevPage.canceled += instance.OnPrevPage;
            }
        }
    }
    public CookBookActions @CookBook => new CookBookActions(this);

    // Debug
    private readonly InputActionMap m_Debug;
    private IDebugActions m_DebugActionsCallbackInterface;
    private readonly InputAction m_Debug_EnterDebug;
    private readonly InputAction m_Debug_KillAllEnemies;
    private readonly InputAction m_Debug_ReloadLevel;
    private readonly InputAction m_Debug_GoToNextLevel;
    private readonly InputAction m_Debug_GoToPreviousLevel;
    private readonly InputAction m_Debug_SkipTuto;
    public struct DebugActions
    {
        private @PlayerActions m_Wrapper;
        public DebugActions(@PlayerActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @EnterDebug => m_Wrapper.m_Debug_EnterDebug;
        public InputAction @KillAllEnemies => m_Wrapper.m_Debug_KillAllEnemies;
        public InputAction @ReloadLevel => m_Wrapper.m_Debug_ReloadLevel;
        public InputAction @GoToNextLevel => m_Wrapper.m_Debug_GoToNextLevel;
        public InputAction @GoToPreviousLevel => m_Wrapper.m_Debug_GoToPreviousLevel;
        public InputAction @SkipTuto => m_Wrapper.m_Debug_SkipTuto;
        public InputActionMap Get() { return m_Wrapper.m_Debug; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(DebugActions set) { return set.Get(); }
        public void SetCallbacks(IDebugActions instance)
        {
            if (m_Wrapper.m_DebugActionsCallbackInterface != null)
            {
                @EnterDebug.started -= m_Wrapper.m_DebugActionsCallbackInterface.OnEnterDebug;
                @EnterDebug.performed -= m_Wrapper.m_DebugActionsCallbackInterface.OnEnterDebug;
                @EnterDebug.canceled -= m_Wrapper.m_DebugActionsCallbackInterface.OnEnterDebug;
                @KillAllEnemies.started -= m_Wrapper.m_DebugActionsCallbackInterface.OnKillAllEnemies;
                @KillAllEnemies.performed -= m_Wrapper.m_DebugActionsCallbackInterface.OnKillAllEnemies;
                @KillAllEnemies.canceled -= m_Wrapper.m_DebugActionsCallbackInterface.OnKillAllEnemies;
                @ReloadLevel.started -= m_Wrapper.m_DebugActionsCallbackInterface.OnReloadLevel;
                @ReloadLevel.performed -= m_Wrapper.m_DebugActionsCallbackInterface.OnReloadLevel;
                @ReloadLevel.canceled -= m_Wrapper.m_DebugActionsCallbackInterface.OnReloadLevel;
                @GoToNextLevel.started -= m_Wrapper.m_DebugActionsCallbackInterface.OnGoToNextLevel;
                @GoToNextLevel.performed -= m_Wrapper.m_DebugActionsCallbackInterface.OnGoToNextLevel;
                @GoToNextLevel.canceled -= m_Wrapper.m_DebugActionsCallbackInterface.OnGoToNextLevel;
                @GoToPreviousLevel.started -= m_Wrapper.m_DebugActionsCallbackInterface.OnGoToPreviousLevel;
                @GoToPreviousLevel.performed -= m_Wrapper.m_DebugActionsCallbackInterface.OnGoToPreviousLevel;
                @GoToPreviousLevel.canceled -= m_Wrapper.m_DebugActionsCallbackInterface.OnGoToPreviousLevel;
                @SkipTuto.started -= m_Wrapper.m_DebugActionsCallbackInterface.OnSkipTuto;
                @SkipTuto.performed -= m_Wrapper.m_DebugActionsCallbackInterface.OnSkipTuto;
                @SkipTuto.canceled -= m_Wrapper.m_DebugActionsCallbackInterface.OnSkipTuto;
            }
            m_Wrapper.m_DebugActionsCallbackInterface = instance;
            if (instance != null)
            {
                @EnterDebug.started += instance.OnEnterDebug;
                @EnterDebug.performed += instance.OnEnterDebug;
                @EnterDebug.canceled += instance.OnEnterDebug;
                @KillAllEnemies.started += instance.OnKillAllEnemies;
                @KillAllEnemies.performed += instance.OnKillAllEnemies;
                @KillAllEnemies.canceled += instance.OnKillAllEnemies;
                @ReloadLevel.started += instance.OnReloadLevel;
                @ReloadLevel.performed += instance.OnReloadLevel;
                @ReloadLevel.canceled += instance.OnReloadLevel;
                @GoToNextLevel.started += instance.OnGoToNextLevel;
                @GoToNextLevel.performed += instance.OnGoToNextLevel;
                @GoToNextLevel.canceled += instance.OnGoToNextLevel;
                @GoToPreviousLevel.started += instance.OnGoToPreviousLevel;
                @GoToPreviousLevel.performed += instance.OnGoToPreviousLevel;
                @GoToPreviousLevel.canceled += instance.OnGoToPreviousLevel;
                @SkipTuto.started += instance.OnSkipTuto;
                @SkipTuto.performed += instance.OnSkipTuto;
                @SkipTuto.canceled += instance.OnSkipTuto;
            }
        }
    }
    public DebugActions @Debug => new DebugActions(this);

    // Transitions
    private readonly InputActionMap m_Transitions;
    private ITransitionsActions m_TransitionsActionsCallbackInterface;
    private readonly InputAction m_Transitions_Debug;
    private readonly InputAction m_Transitions_Cook;
    public struct TransitionsActions
    {
        private @PlayerActions m_Wrapper;
        public TransitionsActions(@PlayerActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Debug => m_Wrapper.m_Transitions_Debug;
        public InputAction @Cook => m_Wrapper.m_Transitions_Cook;
        public InputActionMap Get() { return m_Wrapper.m_Transitions; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(TransitionsActions set) { return set.Get(); }
        public void SetCallbacks(ITransitionsActions instance)
        {
            if (m_Wrapper.m_TransitionsActionsCallbackInterface != null)
            {
                @Debug.started -= m_Wrapper.m_TransitionsActionsCallbackInterface.OnDebug;
                @Debug.performed -= m_Wrapper.m_TransitionsActionsCallbackInterface.OnDebug;
                @Debug.canceled -= m_Wrapper.m_TransitionsActionsCallbackInterface.OnDebug;
                @Cook.started -= m_Wrapper.m_TransitionsActionsCallbackInterface.OnCook;
                @Cook.performed -= m_Wrapper.m_TransitionsActionsCallbackInterface.OnCook;
                @Cook.canceled -= m_Wrapper.m_TransitionsActionsCallbackInterface.OnCook;
            }
            m_Wrapper.m_TransitionsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Debug.started += instance.OnDebug;
                @Debug.performed += instance.OnDebug;
                @Debug.canceled += instance.OnDebug;
                @Cook.started += instance.OnCook;
                @Cook.performed += instance.OnCook;
                @Cook.canceled += instance.OnCook;
            }
        }
    }
    public TransitionsActions @Transitions => new TransitionsActions(this);
    private int m_GamePadSchemeIndex = -1;
    public InputControlScheme GamePadScheme
    {
        get
        {
            if (m_GamePadSchemeIndex == -1) m_GamePadSchemeIndex = asset.FindControlSchemeIndex("GamePad");
            return asset.controlSchemes[m_GamePadSchemeIndex];
        }
    }
    private int m_KeyboardSchemeIndex = -1;
    public InputControlScheme KeyboardScheme
    {
        get
        {
            if (m_KeyboardSchemeIndex == -1) m_KeyboardSchemeIndex = asset.FindControlSchemeIndex("Keyboard");
            return asset.controlSchemes[m_KeyboardSchemeIndex];
        }
    }
    public interface IDefaultActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnAim(InputAction.CallbackContext context);
        void OnShoot(InputAction.CallbackContext context);
        void OnDash(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnCook(InputAction.CallbackContext context);
        void OnPause(InputAction.CallbackContext context);
        void OnOpenCB(InputAction.CallbackContext context);
        void OnEnterDebug(InputAction.CallbackContext context);
    }
    public interface ICookingActions
    {
        void OnCook(InputAction.CallbackContext context);
        void OnSelectIngredient(InputAction.CallbackContext context);
        void OnStartCrafting(InputAction.CallbackContext context);
        void OnIngredientSelector(InputAction.CallbackContext context);
        void OnMove(InputAction.CallbackContext context);
        void OnChangeWheel(InputAction.CallbackContext context);
    }
    public interface IUIActions
    {
        void OnPause(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnReturn(InputAction.CallbackContext context);
        void OnMove(InputAction.CallbackContext context);
        void OnIngredientSelector(InputAction.CallbackContext context);
        void OnSelectIngredient(InputAction.CallbackContext context);
        void OnValidateIngredients(InputAction.CallbackContext context);
    }
    public interface ICookBookActions
    {
        void OnClose(InputAction.CallbackContext context);
        void OnNextPage(InputAction.CallbackContext context);
        void OnPrevPage(InputAction.CallbackContext context);
    }
    public interface IDebugActions
    {
        void OnEnterDebug(InputAction.CallbackContext context);
        void OnKillAllEnemies(InputAction.CallbackContext context);
        void OnReloadLevel(InputAction.CallbackContext context);
        void OnGoToNextLevel(InputAction.CallbackContext context);
        void OnGoToPreviousLevel(InputAction.CallbackContext context);
        void OnSkipTuto(InputAction.CallbackContext context);
    }
    public interface ITransitionsActions
    {
        void OnDebug(InputAction.CallbackContext context);
        void OnCook(InputAction.CallbackContext context);
    }
}
